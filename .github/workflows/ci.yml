name: CI

on:
  workflow_call:
    inputs:
      os:
        description: Runner OS
        required: true
        type: string
      python-version:
        description: Python version
        required: true
        type: string
      package-name:
        description: "The Python package name to test/cover"
        required: true
        type: string
      smoke-test-paths:
        description: |
          space-separated list of files or directories
          to copy into the wheel smoke test.
        required: false
        type: string
        default: "tests"
    secrets:
      repo-token:
        description: GitHub token for checkout/PR operations
        required: true

permissions:
  contents: read
  pull-requests: read


jobs:
  tests:
    name: Python ${{ inputs.python-version }} on ${{ inputs.os }}
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ inputs.python-version }}
          enable-cache: true
      - name: Install project
        run: uv sync --frozen
      - name: Ruff (lint + format-check)
        run: |
          uv run --frozen ruff format --check --diff .
          uv run --frozen ruff check --output-format=github .
      - name: Interrogate (docstring coverage)
        run: uv run --frozen interrogate -v
      - name: Codespell (typo checker)
        run: uv run --frozen codespell --check-filenames
      - name: Pytest (unit test)
        run: uv run --frozen pytest --cov ${{ inputs.package-name }}
      - name: Build
        run: uv build
      - name: Smoke-test built wheel
        run: |
          TEMP_DIR=${{ runner.temp }}/wheeltest
          mkdir -p "$TEMP_DIR"
          for path in ${{ inputs.smoke-test-paths }}; do
            cp -r "$path" "$TEMP_DIR/" || echo "Warning: '$path' not found"
          done
          cp dist/*.whl "$TEMP_DIR"
          cd "$TEMP_DIR"
          uv venv
          source .venv/bin/activate
          uv pip install pytest *.whl
          pytest -q
