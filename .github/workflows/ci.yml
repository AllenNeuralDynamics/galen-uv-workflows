name: CI

on:
  workflow_call:
    inputs:
      os:
        description: Runner OS
        required: true
        type: string
      python-version:
        description: Python version
        required: true
        type: string
      skip_commit_prefix:
        description: Commit prefix to skip CI
        required: false
        type: string
        default: "bump:"
    secrets:
      repo-token:
        description: GitHub token for checkout/PR operations
        required: true

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Python ${{ inputs.python-version }} on ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    if: >
      (github.event_name != 'pull_request' || github.event.pull_request.draft == false) &&
      github.actor != 'github-actions[bot]' &&
      !(github.event_name == 'push' && startsWith(github.event.head_commit.message, inputs.skip_commit_prefix))

    # ‚Üê NO strategy.matrix here!
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ inputs.python-version }}
          enable-cache: true
      - run: uv sync --frozen --extra dev
      - run: |
          uv run --frozen ruff format --check --diff .
          uv run --frozen ruff check --output-format=github .
      - run: uv run --frozen interrogate -v
      - run: uv run --frozen codespell --check-filenames
      - run: uv run --frozen pytest --cov aind-mri-utils
      - run: uv build
      - run: |
          TEMP_DIR=${{ runner.temp }}/wheeltest
          mkdir "$TEMP_DIR" && \
          cp -r tests test-data dist/*.whl "$TEMP_DIR" && \
          cd "$TEMP_DIR" && \
          uv venv && source .venv/bin/activate && \
          uv pip install pytest *.whl && pytest -q
